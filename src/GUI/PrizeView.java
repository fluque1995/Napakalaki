package GUI;

import Model.Prize;

/**
 * Vista de los objetos de tipo {@link Model.prize}. Representan la información
 * del premio que te da un monstro ({@link Model.Monster}) cuando lo derrotas en
 * combate
 * @author Francisco Luque y Antonio Moya
 */
public class PrizeView extends javax.swing.JPanel {

    /**
     * Creates new form PrizeView
     */
    public PrizeView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        levels = new javax.swing.JLabel();
        treasures = new javax.swing.JLabel();

        jLabel1.setText("Niveles:");

        jLabel2.setText("Tesoros:");

        levels.setText("levels");

        treasures.setText("treasures");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(levels))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addComponent(treasures)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(levels))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(treasures))
                .addContainerGap(26, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel levels;
    private javax.swing.JLabel treasures;
    // End of variables declaration//GEN-END:variables
    private Prize prizeView;
    
    /**
     * Método que asigna un premio a la vista y actualiza dicha vista en pantalla
     * @param prize Premio que se quiere visualizar
     */
    public void setPrize(Prize prize){
        
        // Se asigna el modelo del premio a una variable
        this.prizeView = prize;
        
        // Se actualizan las etiquetas de niveles y tesoros ganados
        this.levels.setText(Integer.toString(this.prizeView.getLevels()));
        this.treasures.setText(Integer.toString(this.prizeView.getTreasures()));
        
        // Se actualiza la vista mostrada
        repaint();
    }
    
}
